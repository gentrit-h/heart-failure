/**
 * This code was generated by Builder.io
 */
import React from "react";
import NavItemButton from "./NavItemButton";
import UserDropdown from "./UserDropdown";
import { useLocation } from "react-router-dom";

interface DashboardProps {}

const Header: React.FC<DashboardProps> = () => {
  const navItems = [
    {
      src: "https://cdn.builder.io/api/v1/image/assets/TEMP/54939a2a2eab577ad26dced7825339612dedec347187b6203c7f4cfe5b72ee2a?placeholderIfAbsent=true&apiKey=de20ebe5f7e54554b52c3c72396947ee",
      alt: "Navigation item 1",
    },
    {
      src: "https://cdn.builder.io/api/v1/image/assets/TEMP/dca6324ea583d098e7629866d0cd5aff0e3c8460e87cb5817d0b8a830eb42b01?placeholderIfAbsent=true&apiKey=de20ebe5f7e54554b52c3c72396947ee",
      alt: "Navigation item 2",
    },
  ];
  const location = useLocation();
  const getTabName = () => {
    if(location.pathname.startsWith('/dashboard')) {
      return 'Dashboard';
    } else if(location.pathname.startsWith('/patients')) {
      return 'Patients';
    } else if(location.pathname.startsWith('/analytics')) {
      return 'Analytics';
    } else if(location.pathname.startsWith('/connectivity')) {
      return 'Connectivity Summary';
    } else {
      return 'Dashboard';
    }
  };
  const [tabName, setTabName] = React.useState(getTabName());
  React.useEffect(() => {
    setTabName(getTabName());
  }, [location]);

  return (
    <header className="flex flex-wrap gap-10 justify-between items-center px-8 max-md:px-5">
      <h1 className="self-stretch my-auto text-3xl font-medium leading-none text-gray-900">
      {tabName}
      </h1>
      <div className="flex gap-5 justify-between items-center self-stretch my-auto w-36">
        <nav className="flex gap-1 items-start self-stretch my-auto">
          {navItems.map((item, index) => (
            <NavItemButton key={index} src={item.src} alt={item.alt} />
          ))}
        </nav>
        <UserDropdown />
      </div>
    </header>
  );
};

export default Header;
